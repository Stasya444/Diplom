import { prisma } from "~/server/utils/prisma";
import { hash } from "bcryptjs";
import jwt from "jsonwebtoken";

export default defineEventHandler(async (event) => {
  try {
    const body = await readBody(event);
    const { name, email, phone, password, confirmPassword, role } = body;

    // üîí –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!name || !email || !password || !confirmPassword || !role) {
      return { success: false, message: "–£—Å—ñ –ø–æ–ª—è –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤—ñ" };
    }
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ gmail-–ø–æ—à—Ç–∏
    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
    if (!emailRegex.test(email)) {
      return {
        success: false,
        message:
          "Email –º–∞—î –±—É—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ Gmail (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, example@gmail.com)",
      };
    }
    if (password.length < 6) {
      return {
        success: false,
        message: "–ü–∞—Ä–æ–ª—å –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤",
      };
    }

    if (password !== confirmPassword) {
      return { success: false, message: "–ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è" };
    }

    const hashedPassword = await hash(password, 10);

    const user = await prisma.user.create({
      data: {
        name,
        email,
        password: hashedPassword,
        role,
      },
    });

    // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è JWT —Ç–æ–∫–µ–Ω–∞
    const token = jwt.sign({ id: user.id, role: user.role }, "secret_key", {
      expiresIn: "7d",
    });

    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –≤ cookie
    setCookie(event, "token", token, {
      httpOnly: true,
      path: "/",
      maxAge: 60 * 60 * 24 * 7, // 7 –¥–Ω—ñ–≤
    });

    return {
      success: true,
      message: "–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞",
      user: {
        id: user.id,
        name: user.name,
        role: user.role,
      },
    };
  } catch (error) {
    if (
      typeof error === "object" &&
      error !== null &&
      "code" in error &&
      error.code === "P2002"
    ) {
      return {
        success: false,
        message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ç–∞–∫–∏–º email –≤–∂–µ —ñ—Å–Ω—É—î",
      };
    }

    console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:", error);
    return {
      success: false,
      message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
    };
  }
});
